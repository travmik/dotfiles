# Sample gitconfig
#
[hub]
        protocol = https
[user]
        name = travmik
        email = travmik@gmail.com
[credential]
        helper = osxkeychain
[core]
        excludesfile = ~/.gitignore_global
        autocrlf = input
        editor = subl -n -w
        repositoryformatversion = 0
        filemode = false
        bare = false
        logallrefupdates = true
        ignorecase = true
        precomposeunicode = false
        trustctime = false
[apply]
        whitespace = nowarn
[push]
        default = simple
[merge]
        tool = diffmerge
[diff]
        tool = diffmerge

[difftool]
        prompt = false
[mergetool]
        prompt = false

[mergetool "diffmerge"]
        cmd = diffmerge --merge --result=$MERGED $LOCAL $BASE $REMOTE
        trustExitCode = true
        keepBackup = false
[difftool "diffmerge"]
        cmd = diffmerge \"$LOCAL\" \"$REMOTE\"

[difftool "stree"]
        cmd = stree \"$LOCAL\" \"$REMOTE\"
        path = 
[mergetool "stree"]
        cmd = stree \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
        trustExitCode = true
    
[difftool "Kaleidoscope"]
        cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[mergetool "Kaleidoscope"]
        cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
        trustExitCode = true

[alias]
        df = difftool
        # add
        a = add                           # add
        chunkyadd = add --patch           # stage commits chunk by chunk
        
        # branch
        b = branch -v                     # branch (verbose)
        br = branch
        
        # commit
        c = commit -m                     # commit with message
        ca = commit -am                   # commit all with message
        ci = commit                       # commit
        cia = commit --amend -C HEAD      # ammend your last commit
        
        # checkout
        co = checkout                     # checkout
        nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")
        
        # cherry-pick
        cp = cherry-pick -x               # grab a change from a branch
        
        # diff
        d = diff                          # diff unstaged changes
        dc = diff --cached                # diff staged changes
        last = diff HEAD^                 # diff last committed change
        
        # log
        l = log --graph --date=short
        changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
        short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
        changelog = log --pretty=format:\" * %s\"
        shortnocolor = log --pretty=format:\"%h %cr %cn %s\"
        
        # pull
        pl = pull                         # pull
        
        # push
        ps = push                         # push
        
        # rebase
        rc = rebase --continue            # continue rebase
        rs = rebase --skip                # skip rebase
        
        # remote
        r = remote -v                     # show remotes (verbose)
        
        # reset
        unstage = reset HEAD              # remove files from index (tracking)
        uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
        filelog = log -u                  # show changes to a file
        mt = mergetool                    # fire up the merge tool
        
        # stash
        ss = stash                        # stash changes
        sl = stash list                   # list stashes
        sa = stash apply                  # apply stash (restore changes)
        sd = stash drop                   # drop stashes (destory changes)
        
        # status
        s = status                        # status
        st = status                       # status
        stat = status                     # status
        
        # tag
        t = tag -n                        # show tags with <n> lines of each tag message

        type = cat-file -t
        dump = cat-file -p
        pulled = log -p --reverse --no-merges --stat @{1}..
        promote = !$DOTFILES/bin/git-promote
        wtf     = !$DOTFILES/bin/git-wtf
        rank-contributers = !$DOTFILES/bin/git-rank-contributers
        count   = !git shortlog -sn
[color]
        ui = true
[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green
[color "diff"]
        meta = yellow bold
        frag = magenta bold
        old = red bold
        new = green bold
[format]
        pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
